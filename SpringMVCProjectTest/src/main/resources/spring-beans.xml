<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd" >
    
    <!-- 클래스를 만들 때마다 거기에 의존객체가 있는지 확인해가면서 만들면 되는.. 그런 느낌적인 느낌... -->
	<!--  Service! -->	<!-- 이 서비스를 위쪽에 컨트롤러가 갖다쓰는 거다... --> <!-- id는 컨트롤러의 멤버필드명(객체이름)과 같게 주는 게 알아보기 쉽다... -->
	<bean id="mainService" class="Service.Member.MainService" />
	
	<bean id="memberJoinService" class="Service.Member.MemberJoinService" /> 
	<bean id="authService" class="Service.Member.AuthService" />
	<bean id="memberListService" class="Service.Member.MemberListService" />
	<bean id="memberDetailService" class="Service.Member.MemberDetailService" />
	<bean id="memberModifyService" class="Service.Member.MemberModifyService" />
	<bean id="pwModifyService" class="Service.Member.PwModifyService" />
	<bean id="passwordModifyService" class="Service.Member.PasswordModifyService" />
	
	<!-- 공지사항 게시판.. -->
	<bean id="boardListService" class="Service.Board.BoardListService" />
	<bean id="boardWriteService" class="Service.Board.BoardWriteService" />
	<bean id="boardDetailService" class="Service.Board.BoardDetailService" />
	<bean id="boardModifyService" class="Service.Board.BoardModifyService" />
	<bean id="boardDeleteService" class="Service.Board.BoardDeleteService" />
	
	<!-- 자료실.. -->
<!-- 	<bean id="libraryBoardService" class="Service.Library.LibraryBoardService" /> -->
		
	
	
	<!-- 얘는 또 DAO를 의존객체로 써야 되니까... DAO도 다시 여기 등록해야 되고... -->
	<bean id="memberDAO" class="Model.DAO.MemberDAO" />
	<bean id="boardDAO" class="Model.DAO.BoardDAO" />
	<!-- 얘의 의존객체는 dataSource인데... 이거는 spring-jdbc.xml에 있으니까 여기서 선언할 필요가 없고... -->
	
</beans>